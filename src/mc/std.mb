mod prelude {
    extern fn print_int(x: i32) -> i32;
    extern fn print_char(x: i32) -> i32;
    extern fn malloc<T>(i: u32) -> *T;
    extern fn calloc<T>(i: u32) -> *T;
    extern fn assert(pred: bool);
    extern fn abort() -> !;

    extern fn printf0_(s: *u8) -> i32;
    extern fn printf1_(s: *u8, a: u32) -> i32;
    extern fn printf2_(s: *u8, a: u32, b: u32) -> i32;
    extern fn printf3_(s: *u8, a: u32, b: u32, c: u32) -> i32;

    fn print_uint(x: u32) { print_int(x as i32); }
    fn print_newline() { print_char(10); }

    macro assert!(cond) {
        if !($cond) {
            let err = printf3_("Assertion failed: %s (%s:%d)" as *u8,
                               stringify!($cond) as u32,
                               file!() as u32,
                               line!() as u32);
            abort();
        }
    }
}

